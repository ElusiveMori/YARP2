package Attachment

import YARPPrelude
import Registry

public class UnitAttachment
    private string attachmentId
    private string attachmentPoint
    private effect attachment

    private colorA tint = colorA(255, 255, 255, 255)
    private playercolor color = PLAYER_COLOR_COAL

    construct(unit parent, string attachmentId, string attachmentPoint)
        this.attachmentId = attachmentId
        this.attachmentPoint = attachmentPoint

        this.attachment = parent.addEffect(resolveIdToModel(attachmentId), attachmentPoint)

        setColor(PLAYER_COLOR_COAL)

    ondestroy
        this.attachment.destr()

    function getAttachmentId() returns string
        return attachmentId

    function getAttachmentPoint() returns string
        return attachmentPoint

    function setTint(colorA tint)
        this.attachment.setColor(tint)
        this.attachment.setColor(tint)
        this.tint = tint
    
    function getTint() returns colorA
        return tint

    function setColor(playercolor color)
        this.color = color
        let oldPlayerColor = players[0].getColor()
        players[0].setColor(color)
        this.attachment.setColorByPlayer(players[0])
        players[0].setColor(oldPlayerColor)

    function getColor() returns playercolor
        return color

    private static function resolveIdToModel(string attachmentId) returns string
        string model = null
    
        if attachmentId.endsWith(".mdx")
            model = attachmentId
        else if attachmentId.startsWith("_")
            let id = attachmentId.substring(1).fromRawCode()
            model = getModelForId(id)
        else if doesUidExist(attachmentId)
            model = getModelForId(getIdForUid(attachmentId))

        if not model.endsWith(".mdx")
            model += ".mdx"

        return model

    static function isValidAttachmentId(string attachmentId) returns boolean
        return resolveIdToModel(attachmentId) != null