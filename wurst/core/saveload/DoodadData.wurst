package DoodadData

import YARPPrelude

// public class SingleDoodadData implements DataSerializable
//     private vec2 origin = vec2(0, 0)
//     private vec2 pos = vec2(0, 0)
//     private int id
//     private destructable dood

//     override function serialize(DataWriter writer)
//         writer.writeInt(dood.getTypeId())
//         writer.writeReal(dood.getX() - origin.x)
//         writer.writeReal(dood.getY() - origin.y) 

//     override function deserialize(DataReader reader)
//         id = reader.readInt()
//         pos.x = reader.readReal()
//         pos.y = reader.readReal()

//     function apply(rect area)
//         let origin = area.getCenter()
//         var variation = 0
//         let variationCount = StaticData.getDoodVariations(id)

//         if variationCount != 0
//             variation = GetRandomInt(0, variationCount - 1)

//         createDestructableEx(id, origin + pos, 0 .asAngleDegrees(), 1, variation)

//     function scan(rect area, destructable dood)
//         this.origin = area.getCenter()
//         this.dood = dood

// public class MultipleDoodadData implements DataSerializable


//     override function serialize(DataWriter writer)
//     override function deserialize(DataReader reader)

//     function apply(rect area)

//     function scan(rect area)
